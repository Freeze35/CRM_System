// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.27.3
// source: dbservice/proto/dbtimer.proto

package dbtimer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartEndTimerRequestDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEndTimerRequestDB) Reset() {
	*x = StartEndTimerRequestDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEndTimerRequestDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEndTimerRequestDB) ProtoMessage() {}

func (x *StartEndTimerRequestDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEndTimerRequestDB.ProtoReflect.Descriptor instead.
func (*StartEndTimerRequestDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{0}
}

func (x *StartEndTimerRequestDB) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type StartEndTimerResponseDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`                     // id таймера
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEndTimerResponseDB) Reset() {
	*x = StartEndTimerResponseDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEndTimerResponseDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEndTimerResponseDB) ProtoMessage() {}

func (x *StartEndTimerResponseDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEndTimerResponseDB.ProtoReflect.Descriptor instead.
func (*StartEndTimerResponseDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{1}
}

func (x *StartEndTimerResponseDB) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *StartEndTimerResponseDB) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *StartEndTimerResponseDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *StartEndTimerResponseDB) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkingTimerRequestDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkingTimerRequestDB) Reset() {
	*x = WorkingTimerRequestDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkingTimerRequestDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingTimerRequestDB) ProtoMessage() {}

func (x *WorkingTimerRequestDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingTimerRequestDB.ProtoReflect.Descriptor instead.
func (*WorkingTimerRequestDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{2}
}

type WorkingTimerResponseDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`                     // id таймера
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkingTimerResponseDB) Reset() {
	*x = WorkingTimerResponseDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkingTimerResponseDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingTimerResponseDB) ProtoMessage() {}

func (x *WorkingTimerResponseDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingTimerResponseDB.ProtoReflect.Descriptor instead.
func (*WorkingTimerResponseDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{3}
}

func (x *WorkingTimerResponseDB) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkingTimerResponseDB) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *WorkingTimerResponseDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *WorkingTimerResponseDB) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChangeTimerRequestDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTimerRequestDB) Reset() {
	*x = ChangeTimerRequestDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTimerRequestDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTimerRequestDB) ProtoMessage() {}

func (x *ChangeTimerRequestDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTimerRequestDB.ProtoReflect.Descriptor instead.
func (*ChangeTimerRequestDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeTimerRequestDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

type ChangeTimerResponseDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	Duration      string                 `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`                    // Время окончания отсчёта таймера (опционально)
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`              // Время окончания отсчёта таймера (опционально)
	Active        bool                   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`                       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,6,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTimerResponseDB) Reset() {
	*x = ChangeTimerResponseDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTimerResponseDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTimerResponseDB) ProtoMessage() {}

func (x *ChangeTimerResponseDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTimerResponseDB.ProtoReflect.Descriptor instead.
func (*ChangeTimerResponseDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeTimerResponseDB) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ChangeTimerResponseDB) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ChangeTimerResponseDB) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ChangeTimerResponseDB) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeTimerResponseDB) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ChangeTimerResponseDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *ChangeTimerResponseDB) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddTimerRequestDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimerId       uint64                 `protobuf:"varint,5,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTimerRequestDB) Reset() {
	*x = AddTimerRequestDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTimerRequestDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerRequestDB) ProtoMessage() {}

func (x *AddTimerRequestDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerRequestDB.ProtoReflect.Descriptor instead.
func (*AddTimerRequestDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{6}
}

func (x *AddTimerRequestDB) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddTimerRequestDB) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddTimerRequestDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *AddTimerRequestDB) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddTimerResponseDB struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	Duration      string                 `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TimerId       uint64                 `protobuf:"varint,5,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTimerResponseDB) Reset() {
	*x = AddTimerResponseDB{}
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTimerResponseDB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerResponseDB) ProtoMessage() {}

func (x *AddTimerResponseDB) ProtoReflect() protoreflect.Message {
	mi := &file_dbservice_proto_dbtimer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerResponseDB.ProtoReflect.Descriptor instead.
func (*AddTimerResponseDB) Descriptor() ([]byte, []int) {
	return file_dbservice_proto_dbtimer_proto_rawDescGZIP(), []int{7}
}

func (x *AddTimerResponseDB) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddTimerResponseDB) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddTimerResponseDB) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AddTimerResponseDB) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddTimerResponseDB) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *AddTimerResponseDB) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_dbservice_proto_dbtimer_proto protoreflect.FileDescriptor

var file_dbservice_proto_dbtimer_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x64, 0x62, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x64, 0x62, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x22, 0x3a, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x42, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x57, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xdb, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x42, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xb5, 0x03, 0x0a, 0x0e, 0x64, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x44, 0x42, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x42, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x12, 0x53, 0x0a, 0x0a, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x42, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x12, 0x58,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x44, 0x42, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x44, 0x42, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x12, 0x52, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x42, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x12, 0x49, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x44, 0x42, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x42, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x42, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x2f, 0x64, 0x62, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x2f, 0x3b, 0x64, 0x62, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dbservice_proto_dbtimer_proto_rawDescOnce sync.Once
	file_dbservice_proto_dbtimer_proto_rawDescData = file_dbservice_proto_dbtimer_proto_rawDesc
)

func file_dbservice_proto_dbtimer_proto_rawDescGZIP() []byte {
	file_dbservice_proto_dbtimer_proto_rawDescOnce.Do(func() {
		file_dbservice_proto_dbtimer_proto_rawDescData = protoimpl.X.CompressGZIP(file_dbservice_proto_dbtimer_proto_rawDescData)
	})
	return file_dbservice_proto_dbtimer_proto_rawDescData
}

var file_dbservice_proto_dbtimer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_dbservice_proto_dbtimer_proto_goTypes = []any{
	(*StartEndTimerRequestDB)(nil),  // 0: protobuff.StartEndTimerRequestDB
	(*StartEndTimerResponseDB)(nil), // 1: protobuff.StartEndTimerResponseDB
	(*WorkingTimerRequestDB)(nil),   // 2: protobuff.WorkingTimerRequestDB
	(*WorkingTimerResponseDB)(nil),  // 3: protobuff.WorkingTimerResponseDB
	(*ChangeTimerRequestDB)(nil),    // 4: protobuff.ChangeTimerRequestDB
	(*ChangeTimerResponseDB)(nil),   // 5: protobuff.ChangeTimerResponseDB
	(*AddTimerRequestDB)(nil),       // 6: protobuff.AddTimerRequestDB
	(*AddTimerResponseDB)(nil),      // 7: protobuff.AddTimerResponseDB
}
var file_dbservice_proto_dbtimer_proto_depIdxs = []int32{
	0, // 0: protobuff.dbTimerService.StartTimerDB:input_type -> protobuff.StartEndTimerRequestDB
	0, // 1: protobuff.dbTimerService.EndTimerDB:input_type -> protobuff.StartEndTimerRequestDB
	2, // 2: protobuff.dbTimerService.GetWorkingTimerDB:input_type -> protobuff.WorkingTimerRequestDB
	4, // 3: protobuff.dbTimerService.ChangeTimerDB:input_type -> protobuff.ChangeTimerRequestDB
	6, // 4: protobuff.dbTimerService.AddTimerDB:input_type -> protobuff.AddTimerRequestDB
	1, // 5: protobuff.dbTimerService.StartTimerDB:output_type -> protobuff.StartEndTimerResponseDB
	1, // 6: protobuff.dbTimerService.EndTimerDB:output_type -> protobuff.StartEndTimerResponseDB
	3, // 7: protobuff.dbTimerService.GetWorkingTimerDB:output_type -> protobuff.WorkingTimerResponseDB
	5, // 8: protobuff.dbTimerService.ChangeTimerDB:output_type -> protobuff.ChangeTimerResponseDB
	7, // 9: protobuff.dbTimerService.AddTimerDB:output_type -> protobuff.AddTimerResponseDB
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_dbservice_proto_dbtimer_proto_init() }
func file_dbservice_proto_dbtimer_proto_init() {
	if File_dbservice_proto_dbtimer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dbservice_proto_dbtimer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dbservice_proto_dbtimer_proto_goTypes,
		DependencyIndexes: file_dbservice_proto_dbtimer_proto_depIdxs,
		MessageInfos:      file_dbservice_proto_dbtimer_proto_msgTypes,
	}.Build()
	File_dbservice_proto_dbtimer_proto = out.File
	file_dbservice_proto_dbtimer_proto_rawDesc = nil
	file_dbservice_proto_dbtimer_proto_goTypes = nil
	file_dbservice_proto_dbtimer_proto_depIdxs = nil
}
