// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.27.3
// source: timer/proto/timer.proto

package timer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartEndTimerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEndTimerRequest) Reset() {
	*x = StartEndTimerRequest{}
	mi := &file_timer_proto_timer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEndTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEndTimerRequest) ProtoMessage() {}

func (x *StartEndTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEndTimerRequest.ProtoReflect.Descriptor instead.
func (*StartEndTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{0}
}

func (x *StartEndTimerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type StartEndTimerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`                     // id таймера
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartEndTimerResponse) Reset() {
	*x = StartEndTimerResponse{}
	mi := &file_timer_proto_timer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartEndTimerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartEndTimerResponse) ProtoMessage() {}

func (x *StartEndTimerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartEndTimerResponse.ProtoReflect.Descriptor instead.
func (*StartEndTimerResponse) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{1}
}

func (x *StartEndTimerResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *StartEndTimerResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *StartEndTimerResponse) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *StartEndTimerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type WorkingTimerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkingTimerRequest) Reset() {
	*x = WorkingTimerRequest{}
	mi := &file_timer_proto_timer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkingTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingTimerRequest) ProtoMessage() {}

func (x *WorkingTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingTimerRequest.ProtoReflect.Descriptor instead.
func (*WorkingTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{2}
}

func (x *WorkingTimerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type WorkingTimerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`                     // id таймера
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkingTimerResponse) Reset() {
	*x = WorkingTimerResponse{}
	mi := &file_timer_proto_timer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkingTimerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkingTimerResponse) ProtoMessage() {}

func (x *WorkingTimerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkingTimerResponse.ProtoReflect.Descriptor instead.
func (*WorkingTimerResponse) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{3}
}

func (x *WorkingTimerResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WorkingTimerResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *WorkingTimerResponse) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *WorkingTimerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ChangeTimerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TimerId       uint64                 `protobuf:"varint,3,opt,name=timerId,proto3" json:"timerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTimerRequest) Reset() {
	*x = ChangeTimerRequest{}
	mi := &file_timer_proto_timer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTimerRequest) ProtoMessage() {}

func (x *ChangeTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTimerRequest.ProtoReflect.Descriptor instead.
func (*ChangeTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeTimerRequest) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

type ChangeTimerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	Duration      string                 `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`                    // Время окончания отсчёта таймера (опционально)
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`              // Время окончания отсчёта таймера (опционально)
	Active        bool                   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`                       // Время окончания отсчёта таймера (опционально)
	TimerId       uint64                 `protobuf:"varint,6,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeTimerResponse) Reset() {
	*x = ChangeTimerResponse{}
	mi := &file_timer_proto_timer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeTimerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeTimerResponse) ProtoMessage() {}

func (x *ChangeTimerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeTimerResponse.ProtoReflect.Descriptor instead.
func (*ChangeTimerResponse) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeTimerResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *ChangeTimerResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ChangeTimerResponse) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ChangeTimerResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeTimerResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *ChangeTimerResponse) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *ChangeTimerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type AddTimerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DbName        string                 `protobuf:"bytes,2,opt,name=dbName,proto3" json:"dbName,omitempty"`
	StartTime     string                 `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	TimerId       uint64                 `protobuf:"varint,5,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTimerRequest) Reset() {
	*x = AddTimerRequest{}
	mi := &file_timer_proto_timer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTimerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerRequest) ProtoMessage() {}

func (x *AddTimerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerRequest.ProtoReflect.Descriptor instead.
func (*AddTimerRequest) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{6}
}

func (x *AddTimerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddTimerRequest) GetDbName() string {
	if x != nil {
		return x.DbName
	}
	return ""
}

func (x *AddTimerRequest) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddTimerRequest) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddTimerRequest) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *AddTimerRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AddTimerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     string                 `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"` // Время начала отсчёта таймера
	EndTime       string                 `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`       // Время окончания отсчёта таймера (опционально)
	Duration      string                 `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	TimerId       uint64                 `protobuf:"varint,5,opt,name=timerId,proto3" json:"timerId,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTimerResponse) Reset() {
	*x = AddTimerResponse{}
	mi := &file_timer_proto_timer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTimerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTimerResponse) ProtoMessage() {}

func (x *AddTimerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timer_proto_timer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTimerResponse.ProtoReflect.Descriptor instead.
func (*AddTimerResponse) Descriptor() ([]byte, []int) {
	return file_timer_proto_timer_proto_rawDescGZIP(), []int{7}
}

func (x *AddTimerResponse) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *AddTimerResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *AddTimerResponse) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AddTimerResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddTimerResponse) GetTimerId() uint64 {
	if x != nil {
		return x.TimerId
	}
	return 0
}

func (x *AddTimerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_timer_proto_timer_proto protoreflect.FileDescriptor

var file_timer_proto_timer_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x22, 0x38, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x85,
	0x01, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e,
	0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd9, 0x01, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xbe, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x95, 0x03, 0x0a, 0x0c, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x72, 0x2f, 0x3b, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_timer_proto_timer_proto_rawDescOnce sync.Once
	file_timer_proto_timer_proto_rawDescData = file_timer_proto_timer_proto_rawDesc
)

func file_timer_proto_timer_proto_rawDescGZIP() []byte {
	file_timer_proto_timer_proto_rawDescOnce.Do(func() {
		file_timer_proto_timer_proto_rawDescData = protoimpl.X.CompressGZIP(file_timer_proto_timer_proto_rawDescData)
	})
	return file_timer_proto_timer_proto_rawDescData
}

var file_timer_proto_timer_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_timer_proto_timer_proto_goTypes = []any{
	(*StartEndTimerRequest)(nil),  // 0: protobuff.StartEndTimerRequest
	(*StartEndTimerResponse)(nil), // 1: protobuff.StartEndTimerResponse
	(*WorkingTimerRequest)(nil),   // 2: protobuff.WorkingTimerRequest
	(*WorkingTimerResponse)(nil),  // 3: protobuff.WorkingTimerResponse
	(*ChangeTimerRequest)(nil),    // 4: protobuff.ChangeTimerRequest
	(*ChangeTimerResponse)(nil),   // 5: protobuff.ChangeTimerResponse
	(*AddTimerRequest)(nil),       // 6: protobuff.AddTimerRequest
	(*AddTimerResponse)(nil),      // 7: protobuff.AddTimerResponse
}
var file_timer_proto_timer_proto_depIdxs = []int32{
	0, // 0: protobuff.TimerService.StartTimer:input_type -> protobuff.StartEndTimerRequest
	0, // 1: protobuff.TimerService.EndTimer:input_type -> protobuff.StartEndTimerRequest
	2, // 2: protobuff.TimerService.GetWorkingTimer:input_type -> protobuff.WorkingTimerRequest
	4, // 3: protobuff.TimerService.ChangeTimer:input_type -> protobuff.ChangeTimerRequest
	6, // 4: protobuff.TimerService.AddTimer:input_type -> protobuff.AddTimerRequest
	1, // 5: protobuff.TimerService.StartTimer:output_type -> protobuff.StartEndTimerResponse
	1, // 6: protobuff.TimerService.EndTimer:output_type -> protobuff.StartEndTimerResponse
	3, // 7: protobuff.TimerService.GetWorkingTimer:output_type -> protobuff.WorkingTimerResponse
	5, // 8: protobuff.TimerService.ChangeTimer:output_type -> protobuff.ChangeTimerResponse
	7, // 9: protobuff.TimerService.AddTimer:output_type -> protobuff.AddTimerResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_timer_proto_timer_proto_init() }
func file_timer_proto_timer_proto_init() {
	if File_timer_proto_timer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timer_proto_timer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timer_proto_timer_proto_goTypes,
		DependencyIndexes: file_timer_proto_timer_proto_depIdxs,
		MessageInfos:      file_timer_proto_timer_proto_msgTypes,
	}.Build()
	File_timer_proto_timer_proto = out.File
	file_timer_proto_timer_proto_rawDesc = nil
	file_timer_proto_timer_proto_goTypes = nil
	file_timer_proto_timer_proto_depIdxs = nil
}
