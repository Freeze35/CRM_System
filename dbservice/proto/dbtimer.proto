syntax = "proto3";

package protobuff;

option go_package = "./dbtimer/;dbtimer";

service dbTimerService {

  // Запускаем новый таймер
  rpc  StartTimerDB(StartEndTimerRequestDB) returns (StartEndTimerResponseDB);
  //Завершаем работу таймера
  rpc  EndTimerDB(StartEndTimerRequestDB) returns (StartEndTimerResponseDB);
  // Получаем активный таймер
  rpc  GetWorkingTimerDB(WorkingTimerRequestDB) returns (WorkingTimerResponseDB);
  //Изменяет таймер необходимым образом
  rpc  ChangeTimerDB(ChangeTimerRequestDB) returns (ChangeTimerResponseDB);
  // Добавляем необходимый таймер
  rpc  AddTimerDB(AddTimerRequestDB) returns (AddTimerResponseDB);
}

//Раздел для работы с таймером

message StartEndTimerRequestDB{
  string userId = 1;
  string dbName = 2;
  string description = 3;
}

message StartEndTimerResponseDB{
  string  start_time = 1; // Время начала отсчёта таймера
  string  end_time = 2;   // Время окончания отсчёта таймера (опционально)
  uint64  timerId = 3;   // id таймера
  string message = 4;
  uint32 status = 5;
}

message WorkingTimerRequestDB{
  string userId = 1;
  string dbName = 2;
}

message WorkingTimerResponseDB{
  string  start_time = 1; // Время начала отсчёта таймера
  string  end_time = 2;   // Время окончания отсчёта таймера (опционально)
  uint64  timerId = 3;   // id таймера
  string  message = 4;
  uint32  status = 5;
}

message ChangeTimerRequestDB{
  string userId = 1;
  string dbName = 2;
  uint64 timerId = 3;
}

message ChangeTimerResponseDB{
  string  start_time = 1; // Время начала отсчёта таймера
  string  end_time = 2;   // Время окончания отсчёта таймера (опционально)
  string  duration = 3;   // Время окончания отсчёта таймера (опционально)
  string  description = 4;   // Время окончания отсчёта таймера (опционально)
  bool  active = 5;   // Время окончания отсчёта таймера (опционально)
  uint64 timerId = 6;
  string message = 7;
  uint32 status = 8;
}

message AddTimerRequestDB{
  string userId = 1;
  string dbName = 2;
  string startTime = 3;
  string endTime = 4;
  uint64 timerId = 5;
  string description = 6;
}

message AddTimerResponseDB{
  string start_time = 1; // Время начала отсчёта таймера
  string end_time = 2;   // Время окончания отсчёта таймера (опционально)
  string duration = 3;
  string description = 4;
  uint64 timerId = 5;
  string message = 6;
  uint32 status = 7;
}

