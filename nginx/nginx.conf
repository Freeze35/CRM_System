# Load modules
load_module modules/ngx_http_auth_jwt_module.so;

worker_processes 1;

events { worker_connections 1024; }

http {

    # TLS конфигурация
    ssl_session_cache           shared:SSL:20m;
    ssl_session_timeout         10m;
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers                 ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers   on;
    add_header                  Strict-Transport-Security "max-age=15768000" always;
    ssl_certificate      /etc/nginx/certs/server.pem;  # Укажите путь к вашему SSL сертификату
    ssl_certificate_key  /etc/nginx/certs/server.key;    # Укажите путь к вашему SSL ключу
    ssl_client_certificate /etc/nginx/certs/ca.crt;
    ssl_verify_client on;

    upstream authgrpc {
            server 0.0.0.0:50055;
        }

    auth_jwt_use_keyfile on;
    auth_jwt_keyfile_path /etc/nginx/opensslkeys/public_key.pem;  # Укажите путь к публичному ключу

    server {
        listen 443 ssl;  # Включаем SSL и HTTP/2 для gRPC
        listen [::]:443 ssl;

        http2 on;

        #we need this to enable redirection of 502 code inside @not-found location
        recursive_error_pages on;

        auth_jwt_enabled on;  # Включить JWT аутентификацию для всех путей, начинающихся с /auth/
        auth_jwt_algorithm RS256;  # Укажите алгоритм RS256

        location /protobuff.AuthService/Register {

            auth_jwt_enabled on;  # Включить JWT аутентификацию для всех путей, начинающихся с /auth/
            auth_jwt_algorithm RS256;  # Укажите алгоритм RS256

            grpc_pass grpcs://auth:50055;  # Прокси для gRPC сервиса
            grpc_ssl_certificate /etc/nginx/certs/server.pem;
            grpc_ssl_certificate_key /etc/nginx/certs/server.key;

            error_page 502 = /error502grpc;
        }

        location /error502grpc {
                    internal;
                    default_type application/grpc;
                    add_header Content-Length 0;
                    return 502;
                }
    }
}
